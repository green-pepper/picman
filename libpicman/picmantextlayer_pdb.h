/* LIBPICMAN - The PICMAN Library
 * Copyright (C) 1995-2003 Peter Mattis and Spencer Kimball
 *
 * picmantextlayer_pdb.h
 *
 * This library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see
 * <http://www.gnu.org/licenses/>.
 */

/* NOTE: This file is auto-generated by pdbgen.pl */

#if !defined (__PICMAN_H_INSIDE__) && !defined (PICMAN_COMPILATION)
#error "Only <libpicman/picman.h> can be included directly."
#endif

#ifndef __PICMAN_TEXT_LAYER_PDB_H__
#define __PICMAN_TEXT_LAYER_PDB_H__

G_BEGIN_DECLS

/* For information look into the C source or the html documentation */


gint32                picman_text_layer_new                (gint32                 image_ID,
                                                          const gchar           *text,
                                                          const gchar           *fontname,
                                                          gdouble                size,
                                                          PicmanUnit               unit);
gchar*                picman_text_layer_get_text           (gint32                 layer_ID);
gboolean              picman_text_layer_set_text           (gint32                 layer_ID,
                                                          const gchar           *text);
gchar*                picman_text_layer_get_markup         (gint32                 layer_ID);
gchar*                picman_text_layer_get_font           (gint32                 layer_ID);
gboolean              picman_text_layer_set_font           (gint32                 layer_ID,
                                                          const gchar           *font);
gdouble               picman_text_layer_get_font_size      (gint32                 layer_ID,
                                                          PicmanUnit              *unit);
gboolean              picman_text_layer_set_font_size      (gint32                 layer_ID,
                                                          gdouble                font_size,
                                                          PicmanUnit               unit);
gboolean              picman_text_layer_get_antialias      (gint32                 layer_ID);
gboolean              picman_text_layer_set_antialias      (gint32                 layer_ID,
                                                          gboolean               antialias);
PicmanTextHintStyle     picman_text_layer_get_hint_style     (gint32                 layer_ID);
gboolean              picman_text_layer_set_hint_style     (gint32                 layer_ID,
                                                          PicmanTextHintStyle      style);
gboolean              picman_text_layer_get_kerning        (gint32                 layer_ID);
gboolean              picman_text_layer_set_kerning        (gint32                 layer_ID,
                                                          gboolean               kerning);
gchar*                picman_text_layer_get_language       (gint32                 layer_ID);
gboolean              picman_text_layer_set_language       (gint32                 layer_ID,
                                                          const gchar           *language);
PicmanTextDirection     picman_text_layer_get_base_direction (gint32                 layer_ID);
gboolean              picman_text_layer_set_base_direction (gint32                 layer_ID,
                                                          PicmanTextDirection      direction);
PicmanTextJustification picman_text_layer_get_justification  (gint32                 layer_ID);
gboolean              picman_text_layer_set_justification  (gint32                 layer_ID,
                                                          PicmanTextJustification  justify);
gboolean              picman_text_layer_get_color          (gint32                 layer_ID,
                                                          PicmanRGB               *color);
gboolean              picman_text_layer_set_color          (gint32                 layer_ID,
                                                          const PicmanRGB         *color);
gdouble               picman_text_layer_get_indent         (gint32                 layer_ID);
gboolean              picman_text_layer_set_indent         (gint32                 layer_ID,
                                                          gdouble                indent);
gdouble               picman_text_layer_get_line_spacing   (gint32                 layer_ID);
gboolean              picman_text_layer_set_line_spacing   (gint32                 layer_ID,
                                                          gdouble                line_spacing);
gdouble               picman_text_layer_get_letter_spacing (gint32                 layer_ID);
gboolean              picman_text_layer_set_letter_spacing (gint32                 layer_ID,
                                                          gdouble                letter_spacing);
gboolean              picman_text_layer_resize             (gint32                 layer_ID,
                                                          gdouble                width,
                                                          gdouble                height);
PICMAN_DEPRECATED_FOR(picman_text_layer_get_hint_style)
gboolean              picman_text_layer_get_hinting        (gint32                 layer_ID,
                                                          gboolean              *autohint);
PICMAN_DEPRECATED_FOR(picman_text_layer_set_hint_style)
gboolean              picman_text_layer_set_hinting        (gint32                 layer_ID,
                                                          gboolean               hinting,
                                                          gboolean               autohint);


G_END_DECLS

#endif /* __PICMAN_TEXT_LAYER_PDB_H__ */
