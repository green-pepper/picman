/* LIBPICMAN - The PICMAN Library
 * Copyright (C) 1995-2003 Peter Mattis and Spencer Kimball
 *
 * picmanimage_pdb.h
 *
 * This library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see
 * <http://www.gnu.org/licenses/>.
 */

/* NOTE: This file is auto-generated by pdbgen.pl */

#if !defined (__PICMAN_H_INSIDE__) && !defined (PICMAN_COMPILATION)
#error "Only <libpicman/picman.h> can be included directly."
#endif

#ifndef __PICMAN_IMAGE_PDB_H__
#define __PICMAN_IMAGE_PDB_H__

G_BEGIN_DECLS

/* For information look into the C source or the html documentation */


gboolean                 picman_image_is_valid                 (gint32                  image_ID);
gint*                    picman_image_list                     (gint                   *num_images);
gint32                   picman_image_new                      (gint                    width,
                                                              gint                    height,
                                                              PicmanImageBaseType       type);
gint32                   picman_image_new_with_precision       (gint                    width,
                                                              gint                    height,
                                                              PicmanImageBaseType       type,
                                                              PicmanPrecision           precision);
gint32                   picman_image_duplicate                (gint32                  image_ID);
gboolean                 picman_image_delete                   (gint32                  image_ID);
PicmanImageBaseType        picman_image_base_type                (gint32                  image_ID);
PicmanPrecision            picman_image_get_precision            (gint32                  image_ID);
gint                     picman_image_width                    (gint32                  image_ID);
gint                     picman_image_height                   (gint32                  image_ID);
PICMAN_DEPRECATED_FOR(picman_drawable_free_shadow)
gboolean                 picman_image_free_shadow              (gint32                  image_ID);
gboolean                 picman_image_resize                   (gint32                  image_ID,
                                                              gint                    new_width,
                                                              gint                    new_height,
                                                              gint                    offx,
                                                              gint                    offy);
gboolean                 picman_image_resize_to_layers         (gint32                  image_ID);
gboolean                 picman_image_scale                    (gint32                  image_ID,
                                                              gint                    new_width,
                                                              gint                    new_height);
PICMAN_DEPRECATED_FOR(picman_image_scale)
gboolean                 picman_image_scale_full               (gint32                  image_ID,
                                                              gint                    new_width,
                                                              gint                    new_height,
                                                              PicmanInterpolationType   interpolation);
gboolean                 picman_image_crop                     (gint32                  image_ID,
                                                              gint                    new_width,
                                                              gint                    new_height,
                                                              gint                    offx,
                                                              gint                    offy);
gboolean                 picman_image_flip                     (gint32                  image_ID,
                                                              PicmanOrientationType     flip_type);
gboolean                 picman_image_rotate                   (gint32                  image_ID,
                                                              PicmanRotationType        rotate_type);
gint*                    picman_image_get_layers               (gint32                  image_ID,
                                                              gint                   *num_layers);
gint*                    picman_image_get_channels             (gint32                  image_ID,
                                                              gint                   *num_channels);
gint*                    picman_image_get_vectors              (gint32                  image_ID,
                                                              gint                   *num_vectors);
gint32                   picman_image_get_active_drawable      (gint32                  image_ID);
gboolean                 picman_image_unset_active_channel     (gint32                  image_ID);
gint32                   picman_image_get_floating_sel         (gint32                  image_ID);
gint32                   picman_image_floating_sel_attached_to (gint32                  image_ID);
gboolean                 picman_image_pick_color               (gint32                  image_ID,
                                                              gint32                  drawable_ID,
                                                              gdouble                 x,
                                                              gdouble                 y,
                                                              gboolean                sample_merged,
                                                              gboolean                sample_average,
                                                              gdouble                 average_radius,
                                                              PicmanRGB                *color);
gint32                   picman_image_pick_correlate_layer     (gint32                  image_ID,
                                                              gint                    x,
                                                              gint                    y);
PICMAN_DEPRECATED_FOR(picman_image_insert_layer)
gboolean                 picman_image_add_layer                (gint32                  image_ID,
                                                              gint32                  layer_ID,
                                                              gint                    position);
gboolean                 picman_image_insert_layer             (gint32                  image_ID,
                                                              gint32                  layer_ID,
                                                              gint32                  parent_ID,
                                                              gint                    position);
gboolean                 picman_image_remove_layer             (gint32                  image_ID,
                                                              gint32                  layer_ID);
PICMAN_DEPRECATED_FOR(picman_image_insert_channel)
gboolean                 picman_image_add_channel              (gint32                  image_ID,
                                                              gint32                  channel_ID,
                                                              gint                    position);
gboolean                 picman_image_insert_channel           (gint32                  image_ID,
                                                              gint32                  channel_ID,
                                                              gint32                  parent_ID,
                                                              gint                    position);
gboolean                 picman_image_remove_channel           (gint32                  image_ID,
                                                              gint32                  channel_ID);
PICMAN_DEPRECATED_FOR(picman_image_insert_vectors)
gboolean                 picman_image_add_vectors              (gint32                  image_ID,
                                                              gint32                  vectors_ID,
                                                              gint                    position);
gboolean                 picman_image_insert_vectors           (gint32                  image_ID,
                                                              gint32                  vectors_ID,
                                                              gint32                  parent_ID,
                                                              gint                    position);
gboolean                 picman_image_remove_vectors           (gint32                  image_ID,
                                                              gint32                  vectors_ID);
gint                     picman_image_get_item_position        (gint32                  image_ID,
                                                              gint32                  item_ID);
gboolean                 picman_image_raise_item               (gint32                  image_ID,
                                                              gint32                  item_ID);
gboolean                 picman_image_lower_item               (gint32                  image_ID,
                                                              gint32                  item_ID);
gboolean                 picman_image_raise_item_to_top        (gint32                  image_ID,
                                                              gint32                  item_ID);
gboolean                 picman_image_lower_item_to_bottom     (gint32                  image_ID,
                                                              gint32                  item_ID);
gboolean                 picman_image_reorder_item             (gint32                  image_ID,
                                                              gint32                  item_ID,
                                                              gint32                  parent_ID,
                                                              gint                    position);
gint32                   picman_image_flatten                  (gint32                  image_ID);
gint32                   picman_image_merge_visible_layers     (gint32                  image_ID,
                                                              PicmanMergeType           merge_type);
gint32                   picman_image_merge_down               (gint32                  image_ID,
                                                              gint32                  merge_layer_ID,
                                                              PicmanMergeType           merge_type);
G_GNUC_INTERNAL guint8*  _picman_image_get_colormap            (gint32                  image_ID,
                                                              gint                   *num_bytes);
G_GNUC_INTERNAL gboolean _picman_image_set_colormap            (gint32                  image_ID,
                                                              gint                    num_bytes,
                                                              const guint8           *colormap);
gboolean                 picman_image_clean_all                (gint32                  image_ID);
gboolean                 picman_image_is_dirty                 (gint32                  image_ID);
G_GNUC_INTERNAL gboolean _picman_image_thumbnail               (gint32                  image_ID,
                                                              gint                    width,
                                                              gint                    height,
                                                              gint                   *actual_width,
                                                              gint                   *actual_height,
                                                              gint                   *bpp,
                                                              gint                   *thumbnail_data_count,
                                                              guint8                **thumbnail_data);
gint32                   picman_image_get_active_layer         (gint32                  image_ID);
gboolean                 picman_image_set_active_layer         (gint32                  image_ID,
                                                              gint32                  active_layer_ID);
gint32                   picman_image_get_active_channel       (gint32                  image_ID);
gboolean                 picman_image_set_active_channel       (gint32                  image_ID,
                                                              gint32                  active_channel_ID);
gint32                   picman_image_get_active_vectors       (gint32                  image_ID);
gboolean                 picman_image_set_active_vectors       (gint32                  image_ID,
                                                              gint32                  active_vectors_ID);
gint32                   picman_image_get_selection            (gint32                  image_ID);
gboolean                 picman_image_get_component_active     (gint32                  image_ID,
                                                              PicmanChannelType         component);
gboolean                 picman_image_set_component_active     (gint32                  image_ID,
                                                              PicmanChannelType         component,
                                                              gboolean                active);
gboolean                 picman_image_get_component_visible    (gint32                  image_ID,
                                                              PicmanChannelType         component);
gboolean                 picman_image_set_component_visible    (gint32                  image_ID,
                                                              PicmanChannelType         component,
                                                              gboolean                visible);
gchar*                   picman_image_get_filename             (gint32                  image_ID);
gboolean                 picman_image_set_filename             (gint32                  image_ID,
                                                              const gchar            *filename);
gchar*                   picman_image_get_uri                  (gint32                  image_ID);
gchar*                   picman_image_get_xcf_uri              (gint32                  image_ID);
gchar*                   picman_image_get_imported_uri         (gint32                  image_ID);
gchar*                   picman_image_get_exported_uri         (gint32                  image_ID);
gchar*                   picman_image_get_name                 (gint32                  image_ID);
gboolean                 picman_image_get_resolution           (gint32                  image_ID,
                                                              gdouble                *xresolution,
                                                              gdouble                *yresolution);
gboolean                 picman_image_set_resolution           (gint32                  image_ID,
                                                              gdouble                 xresolution,
                                                              gdouble                 yresolution);
PicmanUnit                 picman_image_get_unit                 (gint32                  image_ID);
gboolean                 picman_image_set_unit                 (gint32                  image_ID,
                                                              PicmanUnit                unit);
gint                     picman_image_get_tattoo_state         (gint32                  image_ID);
gboolean                 picman_image_set_tattoo_state         (gint32                  image_ID,
                                                              gint                    tattoo_state);
gint32                   picman_image_get_layer_by_tattoo      (gint32                  image_ID,
                                                              gint                    tattoo);
gint32                   picman_image_get_channel_by_tattoo    (gint32                  image_ID,
                                                              gint                    tattoo);
gint32                   picman_image_get_vectors_by_tattoo    (gint32                  image_ID,
                                                              gint                    tattoo);
gint32                   picman_image_get_layer_by_name        (gint32                  image_ID,
                                                              const gchar            *name);
gint32                   picman_image_get_channel_by_name      (gint32                  image_ID,
                                                              const gchar            *name);
gint32                   picman_image_get_vectors_by_name      (gint32                  image_ID,
                                                              const gchar            *name);
gboolean                 picman_image_attach_parasite          (gint32                  image_ID,
                                                              const PicmanParasite     *parasite);
gboolean                 picman_image_detach_parasite          (gint32                  image_ID,
                                                              const gchar            *name);
PicmanParasite*            picman_image_get_parasite             (gint32                  image_ID,
                                                              const gchar            *name);
gchar**                  picman_image_get_parasite_list        (gint32                  image_ID,
                                                              gint                   *num_parasites);


G_END_DECLS

#endif /* __PICMAN_IMAGE_PDB_H__ */
